{"remainingRequest":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\babel-loader\\lib\\index.js!E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\src\\views\\home\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\src\\views\\home\\index.vue","mtime":1656728727293},{"path":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\babel.config.js","mtime":1656728727231},{"path":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656730876452},{"path":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1656730879893},{"path":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656730876452},{"path":"E:\\B-web\\02 第二阶段.听课记录\\06-23skr\\admin-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1656730882404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgdmFsaWRhdG9yX0MgPSBmdW5jdGlvbiB2YWxpZGF0b3JfQyhydWxlcywgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIC8vIOi/memHjOWPr+S7pee8luWGmeiHquWumuS5iemFjee9rgogICAgICAvLyBjb25zb2xlLmxvZyhydWxlcyk7CiAgICAgIC8vIGNvbnNvbGUubG9nKHZhbHVlKTsgLy8g6L6T5YWl5qGG5LitdmFsdWXkuYsKICAgICAgLy8gY29uc29sZS5sb2coY2FsbGJhY2spOyAvLyBjYWxsYmFjayDkvZznlKjmipvlh7rplJnor6/mj5DnpLrkv6Hmga/vvIzkvZznlKjnsbvkvLxtZXNzYWdlCiAgICAgIC8vIGNhbGxiYWNrKG5ldyBFcnJvcign5ZOI5ZOI5ZOI5ZOI5ZOIJykpCiAgICAgIGlmICh2YWx1ZS50cmltKCkgPT09ICIiKSB7CiAgICAgICAgdmFyIHJlcyA9IGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl5paH5pys5YaF5a65IikpOyAvLyAgY29uc29sZS5sb2cocmVzKTsgLy8gdW5kZWZpbmVkCgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHJlZyA9IC9cd3syfS87CgogICAgICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl6ZW/5bqm5Li6MueahOmaj+acuuWtl+espiIpKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfTsKCiAgICByZXR1cm4gewogICAgICBvYmo6IHsKICAgICAgICBhOiAiIiwKICAgICAgICBiOiAiIiwKICAgICAgICBjOiAiIgogICAgICB9LAogICAgICBjUnVsZXM6IFsvLyB7IHJlcXVpcmVkOiB0cnVlLCB0cmlnZ2VyOiAnYmx1cicsIG1lc3NhZ2U6ICfor7fovpPlhaXmlofmnKzlhoXlrrknIH0sCiAgICAgIHsKICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRvcl9DLAogICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICB9XSwKICAgICAgYTogewogICAgICAgIGFnZTogJycKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOeCueWHu+aXtuWAmemqjOivgeihqOWNlSzpnIDopoHlsIbmiYDmnInop4TliJkg5bCG5omA5pyJ55qEIHRyaWdnZXLliKDpmaQu5oiW6ICF5bCG6KeE5YiZ5pS+5ZyoIGVsLWZvcm3kuIoKICAgIGhhbmRsZTogZnVuY3Rpb24gaGFuZGxlKCkgewogICAgICBjb25zb2xlLmxvZygiYWFhIik7IC8vIGNvbnNvbGUubG9nKHRoaXMuJHJlZnNbJ2Zvcm1EYXRhJ10pOwogICAgICAvLyB2YWxpZGF0ZSgpIOeCueWHu+aMiemSrumqjOivgeihqOWNleaXtuWAmSzop6blj5Hlh73mlbAuCiAgICAgIC8vIOihqOWNlemqjOivgemAmui/hyB2YWlsZCDov5Tlm54gdHJ1ZSDkuI3pgJrov4fkuLogZmFsc2UKCiAgICAgIHRoaXMuJHJlZnNbImZvcm1EYXRhIl0udmFsaWRhdGUoZnVuY3Rpb24gKHZhaWxkKSB7CiAgICAgICAgY29uc29sZS5sb2coIuihqOWNlemqjOivgee7k+adn+S6hiIpOwogICAgICAgIGNvbnNvbGUubG9nKHZhaWxkKTsKICAgICAgfSk7CiAgICB9LAogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShmb3JtTmFtZSkgewogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBjb25zb2xlLmxvZygn5o+Q5Lqk6aqM6K+B57uT5p6cOicsIHZhbGlkKTsKCiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBhbGVydCgnc3VibWl0IScpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3Igc3VibWl0ISEnKTsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;EACAA,IADA,kBACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA,yCADA,CAEA;;QACA;MACA;;MACA;;MACA;QACAC;QACA;MACA;;MACA;IACA,CAjBA;;IAkBA;MACAC;QACAC,KADA;QAEAC,KAFA;QAGAC;MAHA,CADA;MAMAC,SACA;MACA;QAAAC;QAAAC;MAAA,CAFA,CANA;MAUAL;QACAM;MADA;IAVA;EAcA,CAlCA;EAmCAC;IACA;IACAC,MAFA,oBAEA;MACAC,mBADA,CAEA;MACA;MACA;;MACA;QACAA;QACAA;MACA,CAHA;IAIA,CAXA;IAYAC,UAZA,sBAYAC,QAZA,EAYA;MACA;QACAF;;QACA;UACAG;QACA,CAFA,MAEA;UACAH;UACA;QACA;MACA,CARA;IASA;EAtBA;AAnCA","names":["data","callback","obj","a","b","c","cRules","validator","trigger","age","methods","handle","console","submitForm","formName","alert"],"sourceRoot":"src/views/home","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form :model=\"obj\" ref=\"formData\">\r\n      <!--\r\n        1  prop 属性 通知组件内部，需要验证的什么数据\r\n        2 rules 是 el-form 或者el-form-item 中属性\r\n       -->\r\n      <!-- \r\n        trigger  设置什么时候验证，默认 失去焦点，改变 change事件\r\n        required 是否必填\r\n        message  验证不通过的提示信息\r\n        type     验证数据类型 \r\n           number 数字\r\n           email  邮箱\r\n           date  日期\r\n           array\r\n        min  最小长度\r\n        max 最大长度\r\n        pattern 输入自定义的正则规则\r\n           \r\n       -->\r\n      <el-form-item\r\n        prop=\"a\"\r\n        :rules=\"[\r\n          { required: true, message: '必须添加a', trigger: 'blur' },\r\n          { min: 3, max: 12, message: '长度在3到12之间', trigger: 'blur' },\r\n        ]\"\r\n      >\r\n        <el-input v-model=\"obj.a\" />\r\n      </el-form-item>\r\n      <el-form-item\r\n        prop=\"b\"\r\n        :rules=\"[\r\n          { required: true, trigger: 'blur', message: '请输入文本内容' },\r\n          { pattern: /\\d{3,12}/, message: '请输入3到12的数字' },\r\n        ]\"\r\n      >\r\n        <el-input v-model=\"obj.b\" />\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"c\" :rules=\"cRules\" ref=\"itemRule\">\r\n        <el-input v-model=\"obj.c\" />\r\n      </el-form-item>\r\n\r\n      <el-button @click=\"handle\">点击获取表单验证结果</el-button>\r\n    </el-form>\r\n\r\n    <!-- 第二个表单,点击收验证 -->\r\n    <el-form\r\n      :model=\"a\"\r\n      ref=\"numberValidateForm\"\r\n      label-width=\"100px\"\r\n      class=\"demo-ruleForm\"\r\n    >\r\n      <el-form-item\r\n        label=\"年龄\"\r\n        prop=\"age\"\r\n        :rules=\"[\r\n          { required: true, message: '年龄不能为空' },\r\n          { type: 'number', message: '年龄必须为数字值' },\r\n        ]\"\r\n      >\r\n        <el-input\r\n          type=\"age\"\r\n          v-model.number=\"a.age\"\r\n          autocomplete=\"off\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('numberValidateForm')\"\r\n          >提交</el-button\r\n        >\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const validator_C = (rules, value, callback) => {\r\n      // 这里可以编写自定义配置\r\n      // console.log(rules);\r\n      // console.log(value); // 输入框中value之\r\n      // console.log(callback); // callback 作用抛出错误提示信息，作用类似message\r\n      // callback(new Error('哈哈哈哈哈'))\r\n      if (value.trim() === \"\") {\r\n        let res = callback(new Error(\"请输入文本内容\"));\r\n        //  console.log(res); // undefined\r\n        return;\r\n      }\r\n      let reg = /\\w{2}/;\r\n      if (!reg.test(value)) {\r\n        callback(new Error(\"请输入长度为2的随机字符\"));\r\n        return;\r\n      }\r\n      return true;\r\n    };\r\n    return {\r\n      obj: {\r\n        a: \"\",\r\n        b: \"\",\r\n        c: \"\",\r\n      },\r\n      cRules: [\r\n        // { required: true, trigger: 'blur', message: '请输入文本内容' },\r\n        { validator: validator_C, trigger: \"blur\" },\r\n      ],\r\n      a:{\r\n        age:''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // 点击时候验证表单,需要将所有规则 将所有的 trigger删除.或者将规则放在 el-form上\r\n    handle() {\r\n      console.log(\"aaa\");\r\n      // console.log(this.$refs['formData']);\r\n      // validate() 点击按钮验证表单时候,触发函数.\r\n      // 表单验证通过 vaild 返回 true 不通过为 false\r\n      this.$refs[\"formData\"].validate((vaild) => {\r\n        console.log(\"表单验证结束了\");\r\n        console.log(vaild);\r\n      });\r\n    },\r\n     submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          console.log('提交验证结果:',valid);\r\n          if (valid) {\r\n            alert('submit!');\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n     },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}